//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PruebasSistemaFOP.ServicioAspirantes {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Aspirante", Namespace="http://schemas.datacontract.org/2004/07/ServiciosFOP.Models")]
    [System.SerializableAttribute()]
    public partial class Aspirante : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApellidoMaternoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApellidoPaternoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdAspiranteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumeroEmpleadoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApellidoMaterno {
            get {
                return this.ApellidoMaternoField;
            }
            set {
                if ((object.ReferenceEquals(this.ApellidoMaternoField, value) != true)) {
                    this.ApellidoMaternoField = value;
                    this.RaisePropertyChanged("ApellidoMaterno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApellidoPaterno {
            get {
                return this.ApellidoPaternoField;
            }
            set {
                if ((object.ReferenceEquals(this.ApellidoPaternoField, value) != true)) {
                    this.ApellidoPaternoField = value;
                    this.RaisePropertyChanged("ApellidoPaterno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Estatus {
            get {
                return this.EstatusField;
            }
            set {
                if ((this.EstatusField.Equals(value) != true)) {
                    this.EstatusField = value;
                    this.RaisePropertyChanged("Estatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdAspirante {
            get {
                return this.IdAspiranteField;
            }
            set {
                if ((this.IdAspiranteField.Equals(value) != true)) {
                    this.IdAspiranteField = value;
                    this.RaisePropertyChanged("IdAspirante");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumeroEmpleado {
            get {
                return this.NumeroEmpleadoField;
            }
            set {
                if ((object.ReferenceEquals(this.NumeroEmpleadoField, value) != true)) {
                    this.NumeroEmpleadoField = value;
                    this.RaisePropertyChanged("NumeroEmpleado");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioAspirantes.IServicioAgente")]
    public interface IServicioAgente {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioAgente/GuardarAspirate", ReplyAction="http://tempuri.org/IServicioAgente/GuardarAspirateResponse")]
        System.Collections.Generic.KeyValuePair<int, string> GuardarAspirate(PruebasSistemaFOP.ServicioAspirantes.Aspirante NuevoAspirante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioAgente/GuardarAspirate", ReplyAction="http://tempuri.org/IServicioAgente/GuardarAspirateResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, string>> GuardarAspirateAsync(PruebasSistemaFOP.ServicioAspirantes.Aspirante NuevoAspirante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioAgente/ListarAspirantesActivos", ReplyAction="http://tempuri.org/IServicioAgente/ListarAspirantesActivosResponse")]
        PruebasSistemaFOP.ServicioAspirantes.Aspirante[] ListarAspirantesActivos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioAgente/ListarAspirantesActivos", ReplyAction="http://tempuri.org/IServicioAgente/ListarAspirantesActivosResponse")]
        System.Threading.Tasks.Task<PruebasSistemaFOP.ServicioAspirantes.Aspirante[]> ListarAspirantesActivosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioAgente/ObtenerAspirantePorId", ReplyAction="http://tempuri.org/IServicioAgente/ObtenerAspirantePorIdResponse")]
        PruebasSistemaFOP.ServicioAspirantes.Aspirante ObtenerAspirantePorId(int IdAspirante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioAgente/ObtenerAspirantePorId", ReplyAction="http://tempuri.org/IServicioAgente/ObtenerAspirantePorIdResponse")]
        System.Threading.Tasks.Task<PruebasSistemaFOP.ServicioAspirantes.Aspirante> ObtenerAspirantePorIdAsync(int IdAspirante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioAgente/ActualizarAspirante", ReplyAction="http://tempuri.org/IServicioAgente/ActualizarAspiranteResponse")]
        System.Collections.Generic.KeyValuePair<int, string> ActualizarAspirante(int IdAspirante, bool NuevoEstatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioAgente/ActualizarAspirante", ReplyAction="http://tempuri.org/IServicioAgente/ActualizarAspiranteResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, string>> ActualizarAspiranteAsync(int IdAspirante, bool NuevoEstatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioAgente/ObtenerAspirantesSinGrupo", ReplyAction="http://tempuri.org/IServicioAgente/ObtenerAspirantesSinGrupoResponse")]
        PruebasSistemaFOP.ServicioAspirantes.Aspirante[] ObtenerAspirantesSinGrupo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioAgente/ObtenerAspirantesSinGrupo", ReplyAction="http://tempuri.org/IServicioAgente/ObtenerAspirantesSinGrupoResponse")]
        System.Threading.Tasks.Task<PruebasSistemaFOP.ServicioAspirantes.Aspirante[]> ObtenerAspirantesSinGrupoAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioAgenteChannel : PruebasSistemaFOP.ServicioAspirantes.IServicioAgente, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioAgenteClient : System.ServiceModel.ClientBase<PruebasSistemaFOP.ServicioAspirantes.IServicioAgente>, PruebasSistemaFOP.ServicioAspirantes.IServicioAgente {
        
        public ServicioAgenteClient() {
        }
        
        public ServicioAgenteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioAgenteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioAgenteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioAgenteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.KeyValuePair<int, string> GuardarAspirate(PruebasSistemaFOP.ServicioAspirantes.Aspirante NuevoAspirante) {
            return base.Channel.GuardarAspirate(NuevoAspirante);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, string>> GuardarAspirateAsync(PruebasSistemaFOP.ServicioAspirantes.Aspirante NuevoAspirante) {
            return base.Channel.GuardarAspirateAsync(NuevoAspirante);
        }
        
        public PruebasSistemaFOP.ServicioAspirantes.Aspirante[] ListarAspirantesActivos() {
            return base.Channel.ListarAspirantesActivos();
        }
        
        public System.Threading.Tasks.Task<PruebasSistemaFOP.ServicioAspirantes.Aspirante[]> ListarAspirantesActivosAsync() {
            return base.Channel.ListarAspirantesActivosAsync();
        }
        
        public PruebasSistemaFOP.ServicioAspirantes.Aspirante ObtenerAspirantePorId(int IdAspirante) {
            return base.Channel.ObtenerAspirantePorId(IdAspirante);
        }
        
        public System.Threading.Tasks.Task<PruebasSistemaFOP.ServicioAspirantes.Aspirante> ObtenerAspirantePorIdAsync(int IdAspirante) {
            return base.Channel.ObtenerAspirantePorIdAsync(IdAspirante);
        }
        
        public System.Collections.Generic.KeyValuePair<int, string> ActualizarAspirante(int IdAspirante, bool NuevoEstatus) {
            return base.Channel.ActualizarAspirante(IdAspirante, NuevoEstatus);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, string>> ActualizarAspiranteAsync(int IdAspirante, bool NuevoEstatus) {
            return base.Channel.ActualizarAspiranteAsync(IdAspirante, NuevoEstatus);
        }
        
        public PruebasSistemaFOP.ServicioAspirantes.Aspirante[] ObtenerAspirantesSinGrupo() {
            return base.Channel.ObtenerAspirantesSinGrupo();
        }
        
        public System.Threading.Tasks.Task<PruebasSistemaFOP.ServicioAspirantes.Aspirante[]> ObtenerAspirantesSinGrupoAsync() {
            return base.Channel.ObtenerAspirantesSinGrupoAsync();
        }
    }
}
